// Copyright 2022 CloudWeGo Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package productpage

import (
	"context"
	"github.com/cloudwego/biz-demo/bookinfo/internal/handler/productpage"
	"github.com/cloudwego/biz-demo/bookinfo/pkg/configparser"
	"github.com/cloudwego/biz-demo/bookinfo/pkg/injectors"
)

// Injectors from wire.go:

func NewServer(ctx context.Context) (*Server, error) {
	provider := configparser.Default()
	options, err := Configure(provider)
	if err != nil {
		return nil, err
	}
	serverOptions := options.Server
	reviewClientOptions := options.Reviews
	client, err := injectors.ProvideReviewClient(reviewClientOptions)
	if err != nil {
		return nil, err
	}
	detailsClientOptions := options.Details
	detailsserviceClient, err := injectors.ProvideDetailsClient(detailsClientOptions)
	if err != nil {
		return nil, err
	}
	handler := productpage.New(client, detailsserviceClient)
	server := &Server{
		opts:    serverOptions,
		handler: handler,
	}
	return server, nil
}
